import os
import disnake
from disnake.ext import commands
from cfg.cfg import *


class ButtonView(disnake.ui.View):
    def __init__(self, user_id, bot):
        self.user_id = user_id
        self.bot = bot
        super().__init__(timeout=None)

    @disnake.ui.button(label='–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç', style=disnake.ButtonStyle.red, emoji='üìï')
    async def button(self, button: disnake.ui.Button, inter):
        await inter.response.send_message("–¢–∏–∫–µ—Ç —Å–∫–æ—Ä–æ –∑–∞–∫—Ä–æ–µ—Ç—Å—è...", ephemeral=False)
        channel_1 = self.bot.get_channel(1197178819845562390)
        user_1 = self.user_id
        user_2 = await self.bot.fetch_user(int(user_1))
        amount = 100
        f = open("logs/report.txt", "w+", encoding="UTF-8")
        async for message in inter.channel.history(limit=amount):
            try:
                f.write(f"({str(message.created_at).split('.')[0]}, {message.author}: {message.content} \n")
            except Exception as e:
                print(e)
        f.close()
        embed = disnake.Embed(title='üìö Server answer', description=f'@admin:~# Log report of <@{inter.user.id}>')
        await channel_1.send(embed=embed)
        await channel_1.send(file=disnake.File("logs/report.txt"))
        try:
            await user_2.send(embed=embed)
            await user_2.send(file=disnake.File("logs/report.txt"))
        except Exception as e:
            print(e)
        os.remove('logs/report.txt')
        await inter.channel.delete()


class Communication(disnake.ui.Modal):
    def __init__(self, bot):
        self.bot = bot
        components = [
            disnake.ui.TextInput(
                label="–í–ê–® –ò–ì–†–û–í–û–ô –ù–ò–ö–ù–ï–ô–ú",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: S1Non_",
                custom_id="–ù–∏–∫–Ω–µ–π–º",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–¢–ï–ú–ê –í–û–ü–†–û–°–ê",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –°–∏—Ç—É–∞—Ü–∏—è",
                custom_id="–¢–µ–º–∞",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–í–û–ü–†–û–°",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –í —Ç–∞–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —á—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?",
                custom_id="–°–∏—Ç—É–∞—Ü–∏—è",
                style=disnake.TextInputStyle.paragraph,
                max_length=500
            ),
        ]
        super().__init__(title=" –°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π | –§–æ—Ä–º–∞", components=components)

    async def callback(self, inter: disnake.ModalInteraction):
        try:
            await inter.response.send_message('–æ–∂–∏–¥–∞–π—Ç–µ', ephemeral=True)
            embed = disnake.Embed(title="``–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π``",
                                  description=f'<@&{staff}>'
                                              f'<@{inter.user.id}>',
                                  url='https://i.imgur.com/Du4qBr1.png',
                                  color=disnake.Color.blurple())
            for key, value in inter.text_values.items():
                embed.add_field(
                    name=key.capitalize(),
                    value=value[:1024],
                    inline=False,
                )
            channel = await inter.guild.create_text_channel(f'üíá|{inter.user.name}',
                                                            category=disnake.utils.get(
                                                                inter.guild.categories,
                                                                id=1197211209037009006))
            await channel.set_permissions(inter.user,
                                          send_messages=True,
                                          read_message_history=True,
                                          read_messages=True)
            await channel.set_permissions(inter.guild.get_role(inter.guild.id),
                                          send_messages=False,
                                          read_messages=False)

            user_id = inter.user.id
            view = ButtonView(user_id, self.bot)
            await channel.send(embed=embed, view=view)
        except (Exception) as error:
            print(error)


class Application(disnake.ui.Modal):
    def __init__(self, bot):
        self.bot = bot
        components = [
            disnake.ui.TextInput(
                label="–í–ê–® –ò–ì–†–û–í–û–ô –ù–ò–ö–ù–ï–ô–ú",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: S1Non_",
                custom_id="–ù–∏–∫–Ω–µ–π–º",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–°–°–´–õ–ö–ê –ù–ê –í–ê–® STEAM-–ü–†–û–§–ò–õ–¨–ú(–û–¢–ö–†–´–¢–´–ô)",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: https://steamcommunity.com/id/Zifir72/",
                custom_id="Steam –ø—Ä–æ—Ñ–∏–ª—å",
                style=disnake.TextInputStyle.paragraph,
                max_length=500
            ),
            disnake.ui.TextInput(
                label="–í–ê–® –í–û–ó–†–ê–°–¢",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 18",
                custom_id="–í–æ–∑—Ä–∞—Å—Ç",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–í–ê–® –ß–ê–°–û–í–û–ô –ü–û–Ø–° –ò –°–¢–†–ê–ù–ê –ü–†–û–ñ–ò–í–ê–ù–ò–Ø",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: UTC+7 / –†–æ—Å—Å–∏–π—Å–∫–∞—è –§–µ–¥–µ—Ä–∞—Ü–∏—è",
                custom_id="–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –∏ —Å—Ç—Ä–∞–Ω–∞",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–ö–û–õ–ò–ß–ï–°–¢–í–û –í–ê–ô–ü–û–í –û–¢–´–ì–†–ê–ù–ù–´–•",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 1",
                custom_id="–ö–æ–ª-–≤–æ –≤–∞–π–ø–æ–≤",
                max_length=25
            ),
        ]
        super().__init__(title="–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ | –§–æ—Ä–º–∞", components=components)

    async def callback(self, inter: disnake.ModalInteraction):
        try:
            await inter.response.send_message('–æ–∂–∏–¥–∞–π—Ç–µ', ephemeral=True)
            embed = disnake.Embed(title="``–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞``",
                                  description=f'<@&{staff}>'
                                              f'<@{inter.user.id}>',
                                  url='https://i.imgur.com/Du4qBr1.png',
                                  color=disnake.Color.blurple())
            for key, value in inter.text_values.items():
                embed.add_field(
                    name=key.capitalize(),
                    value=value[:1024],
                    inline=False,
                )
            channel = await inter.guild.create_text_channel(f'üíá|{inter.user.name}',
                                                            category=disnake.utils.get(
                                                                inter.guild.categories,
                                                                id=1197162346045517894))
            await channel.set_permissions(inter.user,
                                          send_messages=True,
                                          read_message_history=True,
                                          read_messages=True)
            await channel.set_permissions(inter.guild.get_role(inter.guild.id),
                                          send_messages=False,
                                          read_messages=False)

            user_id = inter.user.id
            view = ButtonView(user_id, self.bot)
            await channel.send(embed=embed, view=view)
        except (Exception) as error:
            print(error)


class Appeal(disnake.ui.Modal):
    def __init__(self, bot):
        self.bot = bot
        components = [
            disnake.ui.TextInput(
                label="–í–ê–® STEAM64ID | –°–°–´–õ–ö–ê -- –û–¢–ö–ê–ó",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 57895789697867989678",
                custom_id="Steamid64",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–î–ê–¢–ê –ò –ü–†–ò–ß–ò–ù–ê –ë–õ–û–ö–ò–†–û–í–ö–ò",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ù–∞–ø—Ä–∏–º–µ—Ä: 02.01.2024 / –ß–∏—Ç–µ—Ä",
                custom_id="–ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–ù–ò–ö–ù–ï–ô–ú –ú–û–î–ï–†–ê–¢–û–†–ê,–í–´–î–ê–í–®–ï–ì–û –ë–õ–û–ö–ò–†–û–í–ö–£",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: S1Non_",
                custom_id="–ù–∏–∫ –º–æ–¥–µ—Ä–∞",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–ù–û–ú–ï–† –°–ï–†–í–ï–†–ê, –ù–ê –ö–û–¢–û–†–û–ú –ë–õ–û–ö–ò–†–û–í–ö–ê",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: #1",
                custom_id="–ù–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–û–ü–ò–®–ò–¢–ï –°–ò–¢–£–ê–¶–ò–Æ",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ,–∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ YouTube –∏–ª–∏ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –Ω–∞ imgur",
                custom_id="–°–∏—Ç—É–∞—Ü–∏—è",
                style=disnake.TextInputStyle.paragraph,
                max_length=500
            ),
        ]
        super().__init__(title="–ê–ø–µ–ª–ª—è—Ü–∏—è –Ω–∞ —Ä–∞–∑–±–∞–Ω | –§–æ—Ä–º–∞", components=components)

    async def callback(self, inter: disnake.ModalInteraction):
        try:
            await inter.response.send_message('–æ–∂–∏–¥–∞–π—Ç–µ', ephemeral=True)
            embed = disnake.Embed(title="``–ê–ø–µ–ª–ª—è—Ü–∏—è –Ω–∞ —Ä–∞–∑–±–∞–Ω:``",
                                  description=f'<@&{staff}>'
                                              f'<@{inter.user.id}>',
                                  url='https://i.imgur.com/Du4qBr1.png',)
            for key, value in inter.text_values.items():
                embed.add_field(
                    name=key.capitalize(),
                    value=value[:1024],
                    inline=False,
                )
            channel = await inter.guild.create_text_channel(f'üíá|{inter.user.name}',
                                                                  category=disnake.utils.get(
                                                                      inter.guild.categories,
                                                                      id=1197162336688033853))
            await channel.set_permissions(inter.user,
                                          send_messages=True,
                                          read_message_history=True,
                                          read_messages=True)
            await channel.set_permissions(inter.guild.get_role(inter.guild.id),
                                          send_messages=False,
                                          read_messages=False)

            user_id = inter.user.id
            view = ButtonView(user_id, self.bot)
            await channel.send(embed=embed, view=view)
        except (Exception) as error:
            print(error)


class Reportonmoder(disnake.ui.Modal):
    def __init__(self, bot):
        self.bot = bot
        components = [
            disnake.ui.TextInput(
                label="–ù–ò–ö–ù–ï–ô–ú –ú–û–î–ï–†–ê–¢–û–†–ê",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: S1Non_",
                custom_id="–ù–∏–∫–Ω–µ–π–º",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–ù–û–ú–ï–† –°–ï–†–í–ï–†–ê",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: #1",
                custom_id="–ù–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–ù–ê–†–£–®–ï–ù–ò–ï –ú–û–î–ï–†–ê–¢–û–†–ê / –ü–†–ò–ß–ò–ù–ê –ñ–ê–õ–û–ë–´",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –î–∞–Ω–Ω—ã–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä –≤–µ–¥—ë—Ç —Å–µ–±—è –Ω–µ–∞–¥–µ–∫–≤–∞—Ç–Ω–æ –≤ –≥–æ–ª–æ—Å–æ–º —á–∞—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞",
                custom_id="–ü—Ä–∏—á–∏–Ω–∞",
                style=disnake.TextInputStyle.paragraph,
                max_length=500,
            ),
            disnake.ui.TextInput(
                label="–î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í–û",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ,–∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ YouTube –∏–ª–∏ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –Ω–∞ imgur",
                custom_id="–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
                style=disnake.TextInputStyle.paragraph,
                max_length=500
            ),
            disnake.ui.TextInput(
                label="–í–ê–® STEAMID64 | –ù–ï –°–°–´–õ–ö–ê",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å Steam64ID, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ steamid.xyz",
                custom_id="Steamid64",
                max_length=25
            )
        ]
        super().__init__(title="–ñ–∞–ª–æ–±–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ | –§–æ—Ä–º–∞", components=components)

    async def callback(self, inter: disnake.ModalInteraction):
        try:
            await inter.response.send_message('–æ–∂–∏–¥–∞–π—Ç–µ', ephemeral=True)
            embed = disnake.Embed(title="``–ñ–∞–ª–æ–±–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:``",
                                  description=f'<@&{staff}>'
                                  f'<@{inter.user.id}>',
                                  color=disnake.Color.blurple())
            embed.set_thumbnail(url='https://i.imgur.com/Du4qBr1.png')
            for key, value in inter.text_values.items():
                embed.add_field(
                    name=key.capitalize(),
                    value=value[:1024],
                    inline=False,
                )
            channel = await inter.guild.create_text_channel(f'üíá| {inter.user.name}',
                                                                  category=disnake.utils.get(
                                                                      inter.guild.categories,
                                                                      id=1197162327263424612))
            await channel.set_permissions(inter.user,
                                          send_messages=True,
                                          read_message_history=True,
                                          read_messages=True)
            await channel.set_permissions(inter.guild.get_role(inter.guild.id),
                                          send_messages=False,
                                          read_messages=False)

            user_id = inter.user.id
            view = ButtonView(user_id, self.bot)
            await channel.send(embed=embed, view=view)
        except (Exception) as error:
            print(error)


class Report(disnake.ui.Modal):
    def __init__(self, bot):
        self.bot = bot
        components = [
            disnake.ui.TextInput(
                label="–í–ê–® –ò–ì–†–û–í–û–ô –ù–ò–ö–ù–ï–ô–ú",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: S1Non_",
                custom_id="–ù–∏–∫–Ω–µ–π–º",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–ù–û–ú–ï–† –°–ï–†–í–ï–†–ê",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: #1",
                custom_id="–ù–æ–º–µ—Ä —Å–µ—Ä–≤–µ—Ä–∞",
                max_length=25
            ),
            disnake.ui.TextInput(
                label="–ù–ê–†–£–®–ï–ù–ò–ï –ò–ì–†–û–ö–ê / –ü–†–ò–ß–ò–ù–ê –ñ–ê–õ–û–ë–´",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ß–∏—Ç–µ—Ä,–ª–µ—Ç–∞–µ—Ç –ø–æ –≤–æ–∑–¥—É—Ö—É",
                custom_id="–ü—Ä–∏—á–∏–Ω–∞",
                style=disnake.TextInputStyle.paragraph,
                max_length=500,
            ),
            disnake.ui.TextInput(
                label="–î–û–ö–ê–ó–ê–¢–ï–õ–¨–°–¢–í–û",
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ,–∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ YouTube –∏–ª–∏ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –Ω–∞ imgur",
                custom_id="–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞",
                style=disnake.TextInputStyle.paragraph,
                max_length=500
            )
        ]
        super().__init__(title="–ñ–∞–ª–æ–±–∞ –Ω–∞ –∏–≥—Ä–æ–∫–∞ | –§–æ—Ä–º–∞", components=components)

    async def callback(self, inter: disnake.ModalInteraction):
        await inter.response.send_message('–æ–∂–∏–¥–∞–π—Ç–µ', ephemeral=True)
        try:
            embed = disnake.Embed(title="``–ñ–∞–ª–æ–±–∞ –Ω–∞ –∏–≥—Ä–æ–∫–∞:``",
                                  description=f'<@&{staff}>'
                                  f'<@{inter.user.id}>',
                                  color=disnake.Color.blurple())
            embed.set_thumbnail(url='https://i.imgur.com/Du4qBr1.png')
            for key, value in inter.text_values.items():
                embed.add_field(
                    name=key.capitalize(),
                    value=value[:1024],
                    inline=False,
                )
            channel = await inter.guild.create_text_channel(f'üíá| {inter.user.name}',
                                                                  category=disnake.utils.get(
                                                                      inter.guild.categories,
                                                                      id=1197162316920262777))
            await channel.set_permissions(inter.user,
                                          send_messages=True,
                                          read_message_history=True,
                                          read_messages=True)
            await channel.set_permissions(inter.guild.get_role(inter.guild.id),
                                          send_messages=False,
                                          read_messages=False)
            user_id = inter.user.id
            view = ButtonView(user_id, self.bot)
            await channel.send(embed=embed, view=view)
        except (Exception) as error:
            print(error)


class select_ticket_dropdown(disnake.ui.StringSelect):
    def __init__(self,bot):
        self.bot = bot
        options = [
            disnake.SelectOption(
                label="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –∏–≥—Ä–∞",
                description="–ñ–∞–ª–æ–±–∞ –Ω–∞ –∏–≥—Ä–æ–∫–∞",
            ),
            disnake.SelectOption(
                label="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞",
                description="–ñ–∞–ª–æ–±–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞/–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ "
            ),
            disnake.SelectOption(
                label="–ü–æ–¥–∞—Ç—å –∞–ø–µ–ª–ª—è—Ü–∏—é",
                description="–ü–æ–¥–∞—Ç—å –∞–ø–µ–ª–ª—è—Ü–∏—é –Ω–∞ —Ä–∞–∑–±–∞–Ω"
            ),
            disnake.SelectOption(
                label="–ù–∞–ø–∏—Å–∞—Ç—å –∑–∞—è–≤–∫—É",
                description="–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞"
            ),
            disnake.SelectOption(
                label="–°–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π",
                description="–ó–∞–¥–∞—Ç—å –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å"
            )
        ]
        super().__init__(
            placeholder="üìÉ –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
            min_values=1,
            max_values=1,
            options=options,
        )
    async def callback(self, inter: disnake.MessageInteraction):
        if self.values[0] == '1':
            modal = Report
            await inter.response.send_modal(modal=modal(self.bot))
        if self.values[0] == '2':
            modal = Reportonmoder
            await inter.response.send_modal(modal=modal(self.bot))
        if self.values[0] == '3':
            modal = Appeal
            await inter.response.send_modal(modal=modal(self.bot))
        if self.values[0] == '4':
            modal = Application
            await inter.response.send_modal(modal=modal(self.bot))
        if self.values[0] == '5':
            modal = Communication
            await inter.response.send_modal(modal=modal(self.bot))


class select_ticket_dropdown_view(disnake.ui.View):
    def __init__(self,bot):
        self.bot = bot
        super().__init__()
        self.add_item(select_ticket_dropdown(self.bot))


class Ticket(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        print('Ticket is Load')

    @commands.slash_command(guild_ids=[guild])
    @commands.has_permissions(administrator=True)
    async def ticket(self, inter: disnake.ApplicationCommandInteraction):
        view = select_ticket_dropdown_view(self.bot)
        emb = disnake.Embed(title='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —Ç–∏–∫–µ—Ç–æ–≤! |  ',
                             description='', color=disnake.Color.gold())
        emb.set_image(url='https://i.imgur.com/ACTEE1W.jpeg')
        await inter.response.send_message(embed=emb, view=view)


def setup(bot: commands.Bot):
    bot.add_cog(Ticket(bot))